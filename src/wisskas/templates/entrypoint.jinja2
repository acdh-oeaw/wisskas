from fastapi import FastAPI, Query
from git import Repo
from os import path
from rdfproxy import Page, QueryParameters, SPARQLModelAdapter
from typing import Annotated

app = FastAPI()

{% if cors %}
from fastapi.middleware.cors import CORSMiddleware

app.add_middleware(
    CORSMiddleware,
    allow_origins={{ cors.origins | default(["*"], true) }},
    allow_credentials=True,
    allow_methods={{ cors.methods | default(["*"], true) }},
    allow_headers={{ cors.headers | default(["*"], true) }},
)
{% endif %}

# The automatic health check endpoint is /. The return code has to be 200 or 30x.
@app.get("/")
def version():
    repo = Repo(search_parent_directories=True)
    return {"version": repo.git.describe(tags=True, dirty=True, always=True)}

from releven_location import Location_Location as foo

@app.get("/location")
def location(params: Annotated[QueryParameters, Query()]) -> Page[foo]:
    adapter = SPARQLModelAdapter(
        target="https://graphdb.r11.eu/repositories/RELEVEN",
        query=open(f"{path.dirname(path.realpath(__file__))}/releven_location.rq")
        .read()
        .replace("\n ", " "),
        model=foo,
    )
    return adapter.query(params)

